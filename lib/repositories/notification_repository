import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:timezone/timezone.dart' as tz;
import 'package:timezone/data/latest_all.dart' as tz;
import 'package:flutter_timezone/flutter_timezone.dart';
import 'package:uuid/uuid.dart';

class NotificationRepository {
  final FlutterLocalNotificationsPlugin _notificationsPlugin;
  final Uuid _uuid = const Uuid();

  NotificationRepository(this._notificationsPlugin);

  Future<void> initialize() async {
    await _configureLocalTimeZone();
  }

 Future<void> scheduleNotification({ 
    required String title, 
    required String content, 
    required DateTime deliveryTime, 
    required int id}) async { 
    await requestPermissions(); 
    String channelId = const Uuid() 
            .v4(); // id should be unique per message, but contents of the same 
    notification can be updated if you write to the same id 
    const String channelName = 
    "notifications_channel"; // this can be anything, different channels can 
    be configured to have different colors, sound, vibration, we wont do that here 
    String channelDescription = 
    "Standard notifications"; // description is optional but shows up in user 
    system settings 
    var androidPlatformChannelSpecifics = AndroidNotificationDetails( 
        channelId, channelName, 
        channelDescription: channelDescription, 
        importance: Importance.max, 
        priority: Priority.high, 
        ticker: 'ticker', 
        color: const Color.fromARGB(255, 106, 61, 232), 
        when: deliveryTime.millisecondsSinceEpoch, 
        chronometerCountDown: true, 
        usesChronometer: true); 
      var darwinPlatformChannelSpecifics = const DarwinNotificationDetails(); 
      var windowsPlatformChannelSpecifics = WindowsNotificationDetails(); 
      var platformChannelSpecifics = NotificationDetails( 
        windows: windowsPlatformChannelSpecifics, 
        android: androidPlatformChannelSpecifics, 
        iOS: darwinPlatformChannelSpecifics, 
        macOS: darwinPlatformChannelSpecifics); 
      // from docs, not sure about specifics 
      return await _plugin.zonedSchedule( 
              id, 
              title, 
              content, 
              tz.TZDateTime.from(deliveryTime, 
                  tz.local), // TZDateTime required to take daylight savings into 
      considerations. 
              platformChannelSpecifics, 
              androidScheduleMode: AndroidScheduleMode.exactAllowWhileIdle); 
      } 


   Future<void> cancelScheduledNotificaion(int id) async { 
      await flutterLocalNotificationsPlugin.cancel(id); 
      } 

  Future<void> cancelAllNotifications() async {
    await _notificationsPlugin.cancelAll();
  }
}